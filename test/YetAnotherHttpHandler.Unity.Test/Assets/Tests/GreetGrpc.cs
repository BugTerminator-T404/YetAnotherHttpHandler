// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace TestWebApp
{
    /// <summary>
    /// The greeting service definition.
    /// </summary>
    public static partial class Greeter
    {
        static readonly string __ServiceName = "greet.Greeter";

        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
        {
#if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
            if (message is global::Google.Protobuf.IBufferMessage)
            {
                context.SetPayloadLength(message.CalculateSize());
                global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
                context.Complete();
                return;
            }
#endif
            context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
        }

        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static class __Helper_MessageCache<T>
        {
            public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
        }

        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
        {
#if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
            if (__Helper_MessageCache<T>.IsBufferMessage)
            {
                return parser.ParseFrom(context.PayloadAsReadOnlySequence());
            }
#endif
            return parser.ParseFrom(context.PayloadAsNewBuffer());
        }

        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Marshaller<global::TestWebApp.HelloRequest> __Marshaller_greet_HelloRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TestWebApp.HelloRequest.Parser));
        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Marshaller<global::TestWebApp.HelloReply> __Marshaller_greet_HelloReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TestWebApp.HelloReply.Parser));
        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Marshaller<global::TestWebApp.ResetRequest> __Marshaller_greet_ResetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TestWebApp.ResetRequest.Parser));
        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Marshaller<global::TestWebApp.ResetReply> __Marshaller_greet_ResetReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TestWebApp.ResetReply.Parser));
        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Marshaller<global::TestWebApp.EchoRequest> __Marshaller_greet_EchoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TestWebApp.EchoRequest.Parser));
        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Marshaller<global::TestWebApp.EchoReply> __Marshaller_greet_EchoReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TestWebApp.EchoReply.Parser));

        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Method<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply> __Method_SayHello = new grpc::Method<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply>(
            grpc::MethodType.Unary,
            __ServiceName,
            "SayHello",
            __Marshaller_greet_HelloRequest,
            __Marshaller_greet_HelloReply);

        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Method<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply> __Method_SayHelloSlow = new grpc::Method<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply>(
            grpc::MethodType.Unary,
            __ServiceName,
            "SayHelloSlow",
            __Marshaller_greet_HelloRequest,
            __Marshaller_greet_HelloReply);

        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Method<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply> __Method_SayHelloNever = new grpc::Method<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply>(
            grpc::MethodType.Unary,
            __ServiceName,
            "SayHelloNever",
            __Marshaller_greet_HelloRequest,
            __Marshaller_greet_HelloReply);

        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Method<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply> __Method_SayHelloDuplex = new grpc::Method<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply>(
            grpc::MethodType.DuplexStreaming,
            __ServiceName,
            "SayHelloDuplex",
            __Marshaller_greet_HelloRequest,
            __Marshaller_greet_HelloReply);

        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Method<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply> __Method_SayHelloDuplexCompleteRandomly = new grpc::Method<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply>(
            grpc::MethodType.DuplexStreaming,
            __ServiceName,
            "SayHelloDuplexCompleteRandomly",
            __Marshaller_greet_HelloRequest,
            __Marshaller_greet_HelloReply);

        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Method<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply> __Method_SayHelloDuplexAbortRandomly = new grpc::Method<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply>(
            grpc::MethodType.DuplexStreaming,
            __ServiceName,
            "SayHelloDuplexAbortRandomly",
            __Marshaller_greet_HelloRequest,
            __Marshaller_greet_HelloReply);

        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Method<global::TestWebApp.ResetRequest, global::TestWebApp.ResetReply> __Method_ResetByServer = new grpc::Method<global::TestWebApp.ResetRequest, global::TestWebApp.ResetReply>(
            grpc::MethodType.Unary,
            __ServiceName,
            "ResetByServer",
            __Marshaller_greet_ResetRequest,
            __Marshaller_greet_ResetReply);

        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Method<global::TestWebApp.EchoRequest, global::TestWebApp.EchoReply> __Method_EchoDuplex = new grpc::Method<global::TestWebApp.EchoRequest, global::TestWebApp.EchoReply>(
            grpc::MethodType.DuplexStreaming,
            __ServiceName,
            "EchoDuplex",
            __Marshaller_greet_EchoRequest,
            __Marshaller_greet_EchoReply);

        /// <summary>Service descriptor</summary>
        public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
        {
            get { return global::TestWebApp.GreetReflection.Descriptor.Services[0]; }
        }

        /// <summary>Base class for server-side implementations of Greeter</summary>
        [grpc::BindServiceMethod(typeof(Greeter), "BindService")]
        public abstract partial class GreeterBase
        {
            /// <summary>
            /// Sends a greeting
            /// </summary>
            /// <param name="request">The request received from the client.</param>
            /// <param name="context">The context of the server-side call handler being invoked.</param>
            /// <returns>The response to send back to the client (wrapped by a task).</returns>
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::System.Threading.Tasks.Task<global::TestWebApp.HelloReply> SayHello(global::TestWebApp.HelloRequest request, grpc::ServerCallContext context)
            {
                throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
            }

            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::System.Threading.Tasks.Task<global::TestWebApp.HelloReply> SayHelloSlow(global::TestWebApp.HelloRequest request, grpc::ServerCallContext context)
            {
                throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
            }

            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::System.Threading.Tasks.Task<global::TestWebApp.HelloReply> SayHelloNever(global::TestWebApp.HelloRequest request, grpc::ServerCallContext context)
            {
                throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
            }

            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::System.Threading.Tasks.Task SayHelloDuplex(grpc::IAsyncStreamReader<global::TestWebApp.HelloRequest> requestStream, grpc::IServerStreamWriter<global::TestWebApp.HelloReply> responseStream, grpc::ServerCallContext context)
            {
                throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
            }

            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::System.Threading.Tasks.Task SayHelloDuplexCompleteRandomly(grpc::IAsyncStreamReader<global::TestWebApp.HelloRequest> requestStream, grpc::IServerStreamWriter<global::TestWebApp.HelloReply> responseStream, grpc::ServerCallContext context)
            {
                throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
            }

            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::System.Threading.Tasks.Task SayHelloDuplexAbortRandomly(grpc::IAsyncStreamReader<global::TestWebApp.HelloRequest> requestStream, grpc::IServerStreamWriter<global::TestWebApp.HelloReply> responseStream, grpc::ServerCallContext context)
            {
                throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
            }

            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::System.Threading.Tasks.Task<global::TestWebApp.ResetReply> ResetByServer(global::TestWebApp.ResetRequest request, grpc::ServerCallContext context)
            {
                throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
            }

            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::System.Threading.Tasks.Task EchoDuplex(grpc::IAsyncStreamReader<global::TestWebApp.EchoRequest> requestStream, grpc::IServerStreamWriter<global::TestWebApp.EchoReply> responseStream, grpc::ServerCallContext context)
            {
                throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
            }

        }

        /// <summary>Client for Greeter</summary>
        public partial class GreeterClient : grpc::ClientBase<GreeterClient>
        {
            /// <summary>Creates a new client for Greeter</summary>
            /// <param name="channel">The channel to use to make remote calls.</param>
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public GreeterClient(grpc::ChannelBase channel) : base(channel)
            {
            }
            /// <summary>Creates a new client for Greeter that uses a custom <c>CallInvoker</c>.</summary>
            /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public GreeterClient(grpc::CallInvoker callInvoker) : base(callInvoker)
            {
            }
            /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            protected GreeterClient() : base()
            {
            }
            /// <summary>Protected constructor to allow creation of configured clients.</summary>
            /// <param name="configuration">The client configuration.</param>
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            protected GreeterClient(ClientBaseConfiguration configuration) : base(configuration)
            {
            }

            /// <summary>
            /// Sends a greeting
            /// </summary>
            /// <param name="request">The request to send to the server.</param>
            /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            /// <param name="cancellationToken">An optional token for canceling the call.</param>
            /// <returns>The response received from the server.</returns>
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::TestWebApp.HelloReply SayHello(global::TestWebApp.HelloRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
            {
                return SayHello(request, new grpc::CallOptions(headers, deadline, cancellationToken));
            }
            /// <summary>
            /// Sends a greeting
            /// </summary>
            /// <param name="request">The request to send to the server.</param>
            /// <param name="options">The options for the call.</param>
            /// <returns>The response received from the server.</returns>
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::TestWebApp.HelloReply SayHello(global::TestWebApp.HelloRequest request, grpc::CallOptions options)
            {
                return CallInvoker.BlockingUnaryCall(__Method_SayHello, null, options, request);
            }
            /// <summary>
            /// Sends a greeting
            /// </summary>
            /// <param name="request">The request to send to the server.</param>
            /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            /// <param name="cancellationToken">An optional token for canceling the call.</param>
            /// <returns>The call object.</returns>
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncUnaryCall<global::TestWebApp.HelloReply> SayHelloAsync(global::TestWebApp.HelloRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
            {
                return SayHelloAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
            }
            /// <summary>
            /// Sends a greeting
            /// </summary>
            /// <param name="request">The request to send to the server.</param>
            /// <param name="options">The options for the call.</param>
            /// <returns>The call object.</returns>
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncUnaryCall<global::TestWebApp.HelloReply> SayHelloAsync(global::TestWebApp.HelloRequest request, grpc::CallOptions options)
            {
                return CallInvoker.AsyncUnaryCall(__Method_SayHello, null, options, request);
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::TestWebApp.HelloReply SayHelloSlow(global::TestWebApp.HelloRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
            {
                return SayHelloSlow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::TestWebApp.HelloReply SayHelloSlow(global::TestWebApp.HelloRequest request, grpc::CallOptions options)
            {
                return CallInvoker.BlockingUnaryCall(__Method_SayHelloSlow, null, options, request);
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncUnaryCall<global::TestWebApp.HelloReply> SayHelloSlowAsync(global::TestWebApp.HelloRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
            {
                return SayHelloSlowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncUnaryCall<global::TestWebApp.HelloReply> SayHelloSlowAsync(global::TestWebApp.HelloRequest request, grpc::CallOptions options)
            {
                return CallInvoker.AsyncUnaryCall(__Method_SayHelloSlow, null, options, request);
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::TestWebApp.HelloReply SayHelloNever(global::TestWebApp.HelloRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
            {
                return SayHelloNever(request, new grpc::CallOptions(headers, deadline, cancellationToken));
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::TestWebApp.HelloReply SayHelloNever(global::TestWebApp.HelloRequest request, grpc::CallOptions options)
            {
                return CallInvoker.BlockingUnaryCall(__Method_SayHelloNever, null, options, request);
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncUnaryCall<global::TestWebApp.HelloReply> SayHelloNeverAsync(global::TestWebApp.HelloRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
            {
                return SayHelloNeverAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncUnaryCall<global::TestWebApp.HelloReply> SayHelloNeverAsync(global::TestWebApp.HelloRequest request, grpc::CallOptions options)
            {
                return CallInvoker.AsyncUnaryCall(__Method_SayHelloNever, null, options, request);
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncDuplexStreamingCall<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply> SayHelloDuplex(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
            {
                return SayHelloDuplex(new grpc::CallOptions(headers, deadline, cancellationToken));
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncDuplexStreamingCall<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply> SayHelloDuplex(grpc::CallOptions options)
            {
                return CallInvoker.AsyncDuplexStreamingCall(__Method_SayHelloDuplex, null, options);
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncDuplexStreamingCall<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply> SayHelloDuplexCompleteRandomly(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
            {
                return SayHelloDuplexCompleteRandomly(new grpc::CallOptions(headers, deadline, cancellationToken));
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncDuplexStreamingCall<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply> SayHelloDuplexCompleteRandomly(grpc::CallOptions options)
            {
                return CallInvoker.AsyncDuplexStreamingCall(__Method_SayHelloDuplexCompleteRandomly, null, options);
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncDuplexStreamingCall<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply> SayHelloDuplexAbortRandomly(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
            {
                return SayHelloDuplexAbortRandomly(new grpc::CallOptions(headers, deadline, cancellationToken));
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncDuplexStreamingCall<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply> SayHelloDuplexAbortRandomly(grpc::CallOptions options)
            {
                return CallInvoker.AsyncDuplexStreamingCall(__Method_SayHelloDuplexAbortRandomly, null, options);
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::TestWebApp.ResetReply ResetByServer(global::TestWebApp.ResetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
            {
                return ResetByServer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::TestWebApp.ResetReply ResetByServer(global::TestWebApp.ResetRequest request, grpc::CallOptions options)
            {
                return CallInvoker.BlockingUnaryCall(__Method_ResetByServer, null, options, request);
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncUnaryCall<global::TestWebApp.ResetReply> ResetByServerAsync(global::TestWebApp.ResetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
            {
                return ResetByServerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncUnaryCall<global::TestWebApp.ResetReply> ResetByServerAsync(global::TestWebApp.ResetRequest request, grpc::CallOptions options)
            {
                return CallInvoker.AsyncUnaryCall(__Method_ResetByServer, null, options, request);
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncDuplexStreamingCall<global::TestWebApp.EchoRequest, global::TestWebApp.EchoReply> EchoDuplex(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
            {
                return EchoDuplex(new grpc::CallOptions(headers, deadline, cancellationToken));
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncDuplexStreamingCall<global::TestWebApp.EchoRequest, global::TestWebApp.EchoReply> EchoDuplex(grpc::CallOptions options)
            {
                return CallInvoker.AsyncDuplexStreamingCall(__Method_EchoDuplex, null, options);
            }
            /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            protected override GreeterClient NewInstance(ClientBaseConfiguration configuration)
            {
                return new GreeterClient(configuration);
            }
        }

        /// <summary>Creates service definition that can be registered with a server</summary>
        /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        public static grpc::ServerServiceDefinition BindService(GreeterBase serviceImpl)
        {
            return grpc::ServerServiceDefinition.CreateBuilder()
                .AddMethod(__Method_SayHello, serviceImpl.SayHello)
                .AddMethod(__Method_SayHelloSlow, serviceImpl.SayHelloSlow)
                .AddMethod(__Method_SayHelloNever, serviceImpl.SayHelloNever)
                .AddMethod(__Method_SayHelloDuplex, serviceImpl.SayHelloDuplex)
                .AddMethod(__Method_SayHelloDuplexCompleteRandomly, serviceImpl.SayHelloDuplexCompleteRandomly)
                .AddMethod(__Method_SayHelloDuplexAbortRandomly, serviceImpl.SayHelloDuplexAbortRandomly)
                .AddMethod(__Method_ResetByServer, serviceImpl.ResetByServer)
                .AddMethod(__Method_EchoDuplex, serviceImpl.EchoDuplex).Build();
        }

        /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
        /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
        /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
        /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        public static void BindService(grpc::ServiceBinderBase serviceBinder, GreeterBase serviceImpl)
        {
            serviceBinder.AddMethod(__Method_SayHello, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply>(serviceImpl.SayHello));
            serviceBinder.AddMethod(__Method_SayHelloSlow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply>(serviceImpl.SayHelloSlow));
            serviceBinder.AddMethod(__Method_SayHelloNever, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply>(serviceImpl.SayHelloNever));
            serviceBinder.AddMethod(__Method_SayHelloDuplex, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply>(serviceImpl.SayHelloDuplex));
            serviceBinder.AddMethod(__Method_SayHelloDuplexCompleteRandomly, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply>(serviceImpl.SayHelloDuplexCompleteRandomly));
            serviceBinder.AddMethod(__Method_SayHelloDuplexAbortRandomly, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::TestWebApp.HelloRequest, global::TestWebApp.HelloReply>(serviceImpl.SayHelloDuplexAbortRandomly));
            serviceBinder.AddMethod(__Method_ResetByServer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TestWebApp.ResetRequest, global::TestWebApp.ResetReply>(serviceImpl.ResetByServer));
            serviceBinder.AddMethod(__Method_EchoDuplex, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::TestWebApp.EchoRequest, global::TestWebApp.EchoReply>(serviceImpl.EchoDuplex));
        }

    }
}
#endregion
