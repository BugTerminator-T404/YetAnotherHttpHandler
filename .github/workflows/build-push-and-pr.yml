name: Build (Push/Pull request)
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - 'THIRD-PARTY-NOTICES'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - 'THIRD-PARTY-NOTICES'

env:
  _UNITY_VERSION: 2021.3.1f1

jobs:
  run-build:
    name: Build Libraries
    uses: ./.github/workflows/build-natives.yml
    with:
      build-config: debug
      build-only-linux: false
      update-unity-native: false
  build-unity:
    name: Build Unity package
    if: ${{ (github.event_name == 'push' && github.repository_owner == 'Cysharp') || startsWith(github.event.pull_request.head.label, 'Cysharp:') }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Load secrets
        id: op-load-secret
        uses: 1password/load-secrets-action@v2
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN_PUBLIC }}
          UNITY_EMAIL: "op://${{ vars.OP_VAULT_ACTIONS_PUBLIC }}/UNITY_LICENSE/username"
          UNITY_PASSWORD: "op://${{ vars.OP_VAULT_ACTIONS_PUBLIC }}/UNITY_LICENSE/credential"
          UNITY_SERIAL: "op://${{ vars.OP_VAULT_ACTIONS_PUBLIC }}/UNITY_LICENSE/serial"

      - uses: actions/checkout@v4
      - name: Build Unity (.unitypackage)
        uses: Cysharp/Actions/.github/actions/unity-builder@main
        env:
          UNITY_EMAIL: ${{ steps.op-load-secret.outputs.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ steps.op-load-secret.outputs.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ steps.op-load-secret.outputs.UNITY_SERIAL }}
        with:
          projectPath: src/YetAnotherHttpHandler.Unity
          unityVersion: ${{ env._UNITY_VERSION }}
          targetPlatform: StandaloneLinux64
          buildMethod: PackageExporter.Export
      - uses: Cysharp/Actions/.github/actions/check-metas@main
        with:
          directory: src/YetAnotherHttpHandler.Unity
